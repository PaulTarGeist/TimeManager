{"remainingRequest":"/var/www/html/theme2/theme2/node_modules/babel-loader/lib/index.js!/var/www/html/theme2/theme2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/theme2/theme2/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/var/www/html/theme2/theme2/src/components/ForecastWeather.vue?vue&type=script&lang=js","dependencies":[{"path":"/var/www/html/theme2/theme2/src/components/ForecastWeather.vue","mtime":1635360458814},{"path":"/var/www/html/theme2/theme2/babel.config.js","mtime":1635323593783},{"path":"/var/www/html/theme2/theme2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/theme2/theme2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/theme2/theme2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/theme2/theme2/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly9pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCcKaW1wb3J0IHsgdXNlUm91dGUgfSBmcm9tICJ2dWUtcm91dGVyIjsgLy9pbXBvcnQgQ3VycmVudFdlYXRoZXIgZnJvbSAiQ3VycmVudFdlYXRoZXIiOwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBjaXR5OiAiIiwKICBtZXRob2RzOiB7CiAgICBnZXRGb3JlY2FzdFdlYXRoZXI6IGZ1bmN0aW9uIGdldEZvcmVjYXN0V2VhdGhlcigpIHsKICAgICAgLy8gTW9jawogICAgICByZXR1cm4gW3sKICAgICAgICAnZGF0ZSc6ICcyMDIxLTAxLTAxJywKICAgICAgICAndGVtcGVyYXR1cmUnOiAxNQogICAgICB9LCB7CiAgICAgICAgJ2RhdGUnOiAnMjAyMS0wMS0wMicsCiAgICAgICAgJ3RlbXBlcmF0dXJlJzogMTYKICAgICAgfV07CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIHJvdXRlID0gdXNlUm91dGUoKTsKICAgIHZhciBjaXR5UGFyYW1ldGVyID0gcm91dGUucGFyYW1zLmNpdHlQYXJhbWV0ZXI7CiAgICB0aGlzLmNpdHkgPSBjaXR5UGFyYW1ldGVyOwogIH0KfTs="},{"version":3,"sources":["/var/www/html/theme2/theme2/src/components/ForecastWeather.vue"],"names":[],"mappings":"AACA;AACA,SAAS,QAAT,QAAyB,YAAzB,C,CACA;AACA;;AAGA,eAAe;AACb,EAAA,IAAI,EAAE,EADO;AAEb,EAAA,OAAO,EAAE;AACP,IAAA,kBADO,gCACc;AACnB;AACA,aAAO,CACL;AACE,gBAAS,YADX;AAEE,uBAAgB;AAFlB,OADK,EAKL;AACE,gBAAS,YADX;AAEE,uBAAgB;AAFlB,OALK,CAAP;AAUF;AAbO,GAFI;AAiBb,EAAA,OAjBa,qBAiBH;AACR,QAAM,KAAI,GAAI,QAAQ,EAAtB;AACA,QAAM,aAAY,GAAI,KAAK,CAAC,MAAN,CAAa,aAAnC;AACA,SAAK,IAAL,GAAY,aAAZ;AACF;AArBa,CAAf","sourcesContent":["<script>\n//import moment from 'moment'\nimport { useRoute } from \"vue-router\";\n//import CurrentWeather from \"CurrentWeather\";\n//import axios from 'axios'\n\n\nexport default {\n  city: \"\",\n  methods: {\n    getForecastWeather() {\n      // Mock\n      return [\n        {\n          'date' : '2021-01-01',\n          'temperature' : 15 \n        },\n        {\n          'date' : '2021-01-02',\n          'temperature' : 16 \n        } \n      ]\n    }\n  },\n  mounted() {\n    const route = useRoute();\n    const cityParameter = route.params.cityParameter;\n    this.city = cityParameter;\n  }\n}\n</script>\n\n<template>\n  <div id=\"ForecastWeather\">\n    <chart-maker>\n      <tr v-for=\"(data) in getForecastWeather()\" :key=\"data.name\">\n        <td>{{data.date}}&nbsp;{{data.temperature}}</td>\n      </tr>\n    </chart-maker>\n  </div >\n</template>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":""}]}